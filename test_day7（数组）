#include<stdio.h>
#include<string.h>
//数组是一组相同类型元素的集合。数组的创建方式
//type_t arr_name [const_n];
//type_t 是指数组的元素类型
//const_n 是个常量表达式，用来指定数组的大小

int main()
{
	int arr[10] = { 1,2,3 };//不完全初始化,剩下的默认为0
	char arr2[5] = { 'a','b' };
	char arr3[5] = "ab";
	char arr4[] = "abcdef";
	printf("%d\n", sizeof(arr4));//所占空间大小
	printf("%d\n", strlen(arr4));//字符串长度
	return 0;
}

//数组的使用
int main()
{
	/*char arr[] = "abcdef";
	printf("%c\n", arr[3]);*/
	int arr[] = { 1,2,3,4,5,6,7,8,9 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	int i = 0;
	for ( i = 0; i <sz; i++)
	{
		printf("%d\n", arr[i]);
	}
	return 0;
}

//二维数组
int main()
{
	int arr[3][4] = { {1,2,3},{4,5} };     //三行四列、把123放在第一行（列不能省略）
	int i = 0;
	for ( i = 0; i < 3; i++)
	{
		int j = 0;
		for ( j = 0; j < 4; j++)
		{
			printf("%d", arr[i][j]);//输出%d
			printf("&arr[%d][%d]=%p\n",i,j, &arr[i][j]);//取地址
		}
		printf("\n");
	}
	return 0;
}

//数组作为函数参数
//比如写一个冒泡排序(两两相邻元素比较，不满足要求(升序)交换顺序）
void bubble_sort(int arr[], int sz)
{
	//确定冒泡排序的趟数
	int i = 0;
	for ( i = 0; i < sz-1; i++)
	{
		int flag = 1;//假设本趟有序
		//每趟的冒泡排序
		int j = 0;
		for ( j = 0; j < sz-1-i; j++)
		{
			if (arr[j] > arr[j + 1])
			{
				int tmp = arr[j];
				arr[j] = arr[j+1];
				arr[j + 1] = tmp;
				flag = 0;
			}
		}
		if (flag==1)
		{
			break;
		}
	}
}

int main()
{
	int arr[] = { 9,1,2,3,4,5,6,7,8,0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	//sizof(数组名）-表示整个数组，计算的整个数组大小，单位字节
	//&数组名，取出的是整个数组的地址     其他情况均是第一个元素地址
	bubble_sort(arr, sz);
	int i = 0;
	for ( i = 0; i < sz; i++)
	{
		printf("%d\n", arr[i]);
	}
	return 0;
}
