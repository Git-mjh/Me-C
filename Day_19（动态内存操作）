//动态内存分配
//malloc--开辟动态存储区域
//free--释放动态存储区域
 
#include<stdlib.h>
#include<errno.h>
#include<string.h>
int main()
{
   //像内存申请10个整形空间
    int* p = (int*)malloc(10 * sizeof(int));
	if (p==NULL)
	{
		printf("%s\n", strerror(errno));
	}
	else
	{
		int i;
		for (i = 0; i < 10; i++)
		{
			*(p + i) = i;
		}
		for ( i = 0; i < 10; i++)
		{
			printf("%d ", *(p + i));
		}
	}
	free(p); //释放动态存储区域
    return 0;
	
}

//calloc--开辟动态存储区域
int main()
{
	int* p = (int*)calloc(10, sizeof(int));//10个字节，整形,初始化为0
	if (p == NULL)
	{
		printf("%s\n", strerror(errno));
	}
	else
	{
		int i;
		
		for (i = 0; i < 10; i++)
		{
			printf("%d ", *(p + i));
		}
	}
	free(p);
	p = NULL;
	return 0;
}

//********realloc--调整动态内存开辟大小
int main()
{
   //像内存申请10个整形空间
    int* p = (int*)malloc(20);
	if (p==NULL)
	{
		printf("%s\n", strerror(errno));
	}
	else
	{
		int i;
		for (i = 0; i < 5; i++)
		{
			*(p + i) = i;
		}
		int* p2=(int*)realloc(p, 40);
		for (i = 5; i < 10; i++)
		{
			*(p2 + i) = i;
		}
		for ( i = 0; i < 10; i++)
		{
			printf("%d ", *(p2 + i));
		}
	}
	free(p); //释放动态存储区域
    return 0;
	
}  
